$date
  Fri May 15 17:37:28 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module reg_tb $end
$var reg 2 ! rs1[1:0] $end
$var reg 2 " rs2[1:0] $end
$var reg 2 # ws[1:0] $end
$var reg 1 $ we $end
$var reg 1 % clk $end
$var reg 8 & write_data[7:0] $end
$var reg 8 ' rs1_data[7:0] $end
$var reg 8 ( rs2_data[7:0] $end
$scope module r1 $end
$var reg 2 ) rs1[1:0] $end
$var reg 2 * rs2[1:0] $end
$var reg 2 + ws[1:0] $end
$var reg 8 , write_data[7:0] $end
$var reg 1 - clk $end
$var reg 1 . we $end
$var reg 8 / rs1_data[7:0] $end
$var reg 8 0 rs2_data[7:0] $end
$var reg 8 1 reg0[7:0] $end
$var reg 8 2 reg1[7:0] $end
$var reg 8 3 reg2[7:0] $end
$var reg 8 4 reg3[7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00 !
b00 "
b00 #
0$
0%
b00101101 &
b00000000 '
b00000000 (
b00 )
b00 *
b00 +
b00101101 ,
0-
0.
b00000000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b00000000 4
#1000000
1%
1-
#2000000
1$
0%
0-
1.
#3000000
1%
b00101101 '
b00101101 (
1-
b00101101 /
b00101101 0
b00101101 1
#4000000
b11 !
b10 #
0%
b10100001 &
b00000000 '
b11 )
b10 +
b10100001 ,
0-
b00000000 /
#5000000
b01 !
b10 "
1%
b10100001 (
b01 )
b10 *
1-
b10100001 0
b10100001 3
#6000000
b10 !
b00 "
b01 #
0%
b00101101 &
b10100001 '
b00101101 (
b10 )
b00 *
b01 +
b00101101 ,
0-
b10100001 /
b00101101 0
#7000000
b01 !
b11 "
1%
b00000001 &
b00000001 '
b00000000 (
b01 )
b11 *
b00000001 ,
1-
b00000001 /
b00000000 0
b00000001 2
#8000000
b11 !
b01 "
b11 #
0%
b00101101 &
b00000000 '
b00000001 (
b11 )
b01 *
b11 +
b00101101 ,
0-
b00000000 /
b00000001 0
#9000000
b00 !
b10 "
1%
b11101101 &
b00101101 '
b10100001 (
b00 )
b10 *
b11101101 ,
1-
b00101101 /
b10100001 0
b11101101 4
#10000000
b01 !
b00 "
b00 #
0%
b10100101 &
b00000001 '
b00101101 (
b01 )
b00 *
b00 +
b10100101 ,
0-
b00000001 /
b00101101 0
#11000000
1%
b10100101 (
1-
b10100101 0
b10100101 1
#12000000
b00 !
b11 "
0$
0%
b11111111 &
b10100101 '
b11101101 (
b00 )
b11 *
b11111111 ,
0-
0.
b10100101 /
b11101101 0
#13000000
1%
1-
#14000000
b01 !
b10 "
0%
b00000001 '
b10100001 (
b01 )
b10 *
0-
b00000001 /
b10100001 0
#15000000
b01 #
1%
b01 +
1-
#16000000
b10 !
b01 "
b00 #
0%
b10100001 '
b00000001 (
b10 )
b01 *
b00 +
0-
b10100001 /
b00000001 0
#17000000
b10 #
1%
b10 +
1-
#18000000
b11 !
b00 "
b00 #
0%
b11101101 '
b10100101 (
b11 )
b00 *
b00 +
0-
b11101101 /
b10100101 0
#19000000
b11 #
1%
b11 +
1-
#20000000
